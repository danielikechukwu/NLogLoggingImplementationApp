<?xml version="1.0" encoding="utf-8" ?>
<nlog xmlns="http://www.nlog-project.org/schemas/NLog.xsd"
      xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
      autoReload="true"
      internalLogLevel="Warn"
      internalLogFile="internal-nlog.txt"
   throwConfigExceptions="true">

	<!-- Define various log targets where logs will be written -->
	<targets>

		<!-- AsyncWrapper target for asynchronous Database logging -->
		<target xsi:type="AsyncWrapper"
					  name="asyncFileWrapper">

			<!-- 
    Log to SQL Server 
    commandText: Specifies the SQL command to insert log entries into the LogEntries table
    @date: The timestamp of the log event.
    @level: The log level (e.g., Info, Error).
    @logger: The name of the logger.
    @message: The log message.
    @exception: Exception details, if any.
   -->

			<target xsi:type="Database" name="database"
			  connectionString="Server=DESKTOP-EF86N1V\MSSQLSERVER01;Database=NLoggerLoggingDB;Trusted_Connection=True;TrustServerCertificate=True;MultipleActiveResultSets=true;"
     commandText="INSERT INTO LogEntries (Date, Level, Message, Logger, Exception, UniqueId, ServerIP, ApplicationName) 
     VALUES (@date, @level, @message, @logger, @exception, @uniqueId, @serverIP, @appName)">

				<!-- Parameter mapping -->
				<parameter name="@date" layout="${date}" />
				<parameter name="@level" layout="${level:uppercase=true}" />
				<parameter name="@logger" layout="${logger}" />
				<parameter name="@message" layout="${message}" />
				<parameter name="@exception" layout="${exception:tostring}" />
				<parameter name="@uniqueId" layout="${event-properties:item=UniqueId}" />
				<!-- Hardcoded ServerIP; replace with your actual server IP if needed -->
				<parameter name="@serverIP" layout="192.168.1.100" />
				<!-- Hardcoded Application Name -->
				<parameter name="@appName" layout="MyWebAPI" />
			</target>
		</target>

		<!-- Console target: Display logs in the console window (without async wrapper, as console writes are usually fast) -->
		<target xsi:type="Console"
		  name="console"
		  layout="${longdate}|${level:uppercase=true}|${logger}|${message} ${exception:format=ToString}" />

		<!-- Null target: Discard logs, used to filter out logs from specific namespaces -->
		<target xsi:type="Null" name="blackhole" />
	</targets>

	<!-- Define logging rules to control which logs go to which targets -->
	<rules>
		<!-- Filter out logs from the "Microsoft" namespace by sending them to the "blackhole" target -->
		<logger name="Microsoft.*" minlevel="Trace" writeTo="blackhole" final="true" />

		<!-- Filter out logs from the "System" namespace by sending them to the "blackhole" target -->
		<logger name="System.*" minlevel="Trace" writeTo="blackhole" final="true" />

		<!-- Send all logs with level Information or higher to the database target -->
		<logger name="*" minlevel="Information" writeTo="database" />

		<logger name="*" minlevel="Trace" writeTo="asyncFileWrapper" />

		<!-- Send all logs with level Debug or higher to the console target -->
		<logger name="*" minlevel="Debug" writeTo="console" />
	</rules>
</nlog>